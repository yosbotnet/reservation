# Medical Clinic Management System

## Tech Stack
- Backend: Node.js + Express + Prisma + MySQL
- Frontend: React + TailwindCSS
- Authentication: JWT

## Database Schema
See attached ER diagram. Key entities:
- UTENTE (users with roles)
- paziente (patients)
- dottore (doctors)
- SLOT_DISPONIBILE (available time slots)
- INTERVENTO (surgeries)
- VISITA (visits)

## Core Features

### Public Area
1. User Registration
- Patient registration form with validation
- Input fields: name, fiscal code, birth date, email, phone, blood type, allergies

2. Appointment Booking
- View doctor availability
- Book appointments
- View upcoming appointments
- Access post-surgery protocols

### Doctor Area
1. Calendar Management
- Set weekly availability
- Register unavailability periods
- View scheduled appointments/surgeries

2. Patient Management
- Access patient records
- Record visit outcomes
- Schedule surgeries
- Update post-surgery instructions

### Admin Area
1. User Management
- CRUD operations for users/doctors
- Role assignment

2. Resource Management
- Operating room management
- Equipment inventory
- Surgery types catalog

3. Statistics
- Operating room occupancy rates
- Surgery duration analysis
- Success rate by doctor
- Yearly surgery statistics

## Implementation Requirements

### Frontend Structure
1. Components
- Authentication (Login/Register)
- Calendar (weekly/monthly views)
- Booking forms
- Patient records
- Admin dashboard
- Statistics charts

2. State Management
- User authentication state
- Calendar state
- Form states

### Backend Structure
1. API Endpoints
- Auth routes (/auth/*)
- Public routes (/api/public/*)
- Doctor routes (/api/doctor/*)
- Admin routes (/api/admin/*)

2. Middleware
- Authentication
- Role-based access
- Request validation

### Security
- Password hashing
- JWT token validation
- Role-based access control
- Input sanitization

### Code Organization
```
/frontend
  /src
    /components
    /pages
    /hooks
    /contexts
    /api
    /utils
/backend
  /src
    /controllers
    /middleware
    /services
    /prisma
    /utils
```

## Priority Features
1. User authentication
2. Doctor availability management
3. Appointment booking
4. Patient records
5. Surgery scheduling
6. Statistics dashboard

## Additional Notes
- Implement proper error handling
- Add form validation
- Include loading states
- Add confirmation dialogs
- Implement search functionality
- Add pagination for lists
- Include sorting/filtering options